{"version":3,"sources":["components/Navbar.js","components/Header.js","components/index.js","components/Resume.js","App.js","serviceWorker.js","index.js","images/avatar.png"],"names":["useStyles","makeStyles","theme","menuSliderContainer","width","background","height","avatar","display","margin","spacing","listItem","color","menuItems","listIcon","Home","listText","listPath","AssignmentInd","Apps","ContactMail","Navbar","slider","useState","right","state","setState","toggleSlider","open","classes","Box","component","AppBar","position","style","Toolbar","IconButton","onClick","ArrowBack","Typography","variant","anchor","onClose","className","Avatar","src","alt","Divider","List","map","lsItem","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","title","subTitle","marginBottom","typedContainer","top","left","transform","textAlign","zIndex","Header","Grid","container","justify","varient","strings","typeSpeed","backSpeed","loop","particlesCanvas","opacity","Index","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity_min","mainContainer","timeLine","padding","content","border","clear","breakpoints","up","Resume","align","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.06ba16a9.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport MobileRightMenuSlider from '@material-ui/core/Drawer'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    ListItem,\r\n    ListItemIcon,\r\n    IconButton,\r\n    ListItemText,\r\n    Avatar,\r\n    Divider,\r\n    List,\r\n    Typography,\r\n    Box\r\n} from \"@material-ui/core\";\r\nimport {\r\n    ArrowBack,\r\n    AssignmentInd,\r\n    Home,\r\n    Apps,\r\n    ContactMail,\r\n    Block\r\n} from \"@material-ui/icons\"\r\nimport App from '../App';\r\nimport avatar from \"../images/avatar.png\"\r\n\r\n//CSS Styles\r\nconst useStyles = makeStyles(theme => ({\r\n    menuSliderContainer: {\r\n        width: 250,\r\n        background: \"#511\",\r\n        height: \"100%\"\r\n    },\r\n    avatar: {\r\n        display: \"Block\",\r\n        margin: \"0.5rem auto\",\r\n        width: theme.spacing(13),\r\n        height: theme.spacing(13)\r\n\r\n    },\r\n    listItem:{\r\n        color:\"tan\",\r\n\r\n    }\r\n}));\r\n\r\nconst menuItems=[\r\n    {\r\n        listIcon:<Home/>,\r\n        listText:\"Home\",\r\n        listPath:\"/\"\r\n    },\r\n    {\r\n        listIcon:<AssignmentInd/>,\r\n        listText:\"Resume\",\r\n        listPath:\"resume\"\r\n    },\r\n    {\r\n        listIcon:<Apps/>,\r\n        listText:\"Portfolio\",\r\n        listPath:\"portfolio\"\r\n    },\r\n    {\r\n        listIcon:<ContactMail/>,\r\n        listText:\"Contacts\",\r\n        listPath:\"contact\"\r\n    }\r\n]\r\n\r\nconst Navbar = () => {\r\n    const [state,setState]=useState({\r\n        right:false\r\n    })\r\n\r\n    const toggleSlider=((slider,open)=>()=>{\r\n        setState({...state,[slider]:open});\r\n    });\r\n\r\n    const sideList=slider =>(\r\n        <Box className={classes.menuSliderContainer} component=\"div\"\r\n        onClick={toggleSlider(slider,false)}>\r\n        <Avatar className={classes.avatar} src={avatar} alt=\"Jonathan Fernandes\"></Avatar>\r\n        <Divider ></Divider>\r\n        <List>\r\n            {menuItems.map((lsItem,key)=>(\r\n                <ListItem button key={key} component={Link} to={lsItem.listPath}>\r\n                <ListItemIcon className={classes.listItem}>{lsItem.listIcon}</ListItemIcon>\r\n                <ListItemText className={classes.listItem} primary={lsItem.listText}/>\r\n            </ListItem>\r\n            ))}\r\n            \r\n\r\n        </List>\r\n    </Box>\r\n        )\r\n\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            \r\n            <Box component=\"nav\">\r\n                <AppBar position=\"static\" style={{ background: \"#222\" }}>\r\n                    <Toolbar>\r\n                        <IconButton onClick={toggleSlider(\"right\",true)}>\r\n                            <ArrowBack style={{ color: \"tomato\" }}>\r\n\r\n                            </ArrowBack>\r\n                        </IconButton>\r\n                        <Typography variant=\"h5\" style={{ color: \"tan\" }}>\r\n                            Portfolio\r\n               </Typography>\r\n               <MobileRightMenuSlider \r\n               anchor=\"right\" \r\n               open={state.right}\r\n               onClose={toggleSlider(\"right\",false)}>\r\n                   {sideList(\"right\")}\r\n                   </MobileRightMenuSlider>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport {Typography,Avatar,Grid,Box} from \"@material-ui/core\"\r\nimport Typed from \"react-typed\"\r\nimport avatar from \"../images/avatar.png\"\r\n\r\n//CSS Styles\r\nconst useStyles=makeStyles(theme=>({\r\n    avatar:{\r\n        width:theme.spacing(15),\r\n        height:theme.spacing(15),\r\n        margin:theme.spacing(1)\r\n    },\r\n    title:{\r\n        color:\"tomato\"\r\n    },\r\n    subTitle:{\r\n        color:\"tan\",\r\n        marginBottom:\"3rem\"\r\n    },\r\n    typedContainer:{\r\n        position:\"absolute\",\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform:\"translate(-50%,-50%)\",\r\n        width:\"100vw\",\r\n        textAlign:\"center\",\r\n        zIndex:\"1\"\r\n    }\r\n}))\r\n\r\nconst Header = () => {\r\n  const classes=useStyles();\r\n    return (\r\n        <Box className={classes.typedContainer}>\r\n            <Grid container justify=\"center\">\r\n            <Avatar className={classes.avatar} src={avatar} alt=\"Jonathan Fernandes\" />\r\n            </Grid>\r\n          \r\n           <Typography className={classes.title}  varient=\"h4\">\r\n<Typed strings ={[\"Jonathan Fernandes\"]} typeSpeed={40}/>\r\n           </Typography>\r\n           <Typography className={classes.subTitle} varient=\"h4\">\r\n<Typed strings ={[\"Blockchain\",\"Software Developer\",\"Tech Enthusiast\"]} typeSpeed={40} backSpeed={60} loop/>\r\n           </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport Header from './Header'\r\nimport Particles from 'react-particles-js'\r\nimport {makeStyles} from '@material-ui/styles'\r\n\r\nconst useStyles=makeStyles({\r\n  particlesCanvas:{\r\n    position:\"absolute\",\r\n    opacity:\"0.3\"\r\n  }\r\n})\r\n\r\nconst Index = () => {\r\n  const classes=useStyles();\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n          <Header/>\r\n          <Particles\r\n          canvasClassName={classes.particlesCanvas}\r\n          params={{\r\n            particles:{\r\n              number:{\r\n                value:45,\r\n                density:{\r\n                  enable:true,\r\n                  value_area:900\r\n                }\r\n              },\r\n              shape:{\r\n                type:[\"circle\"],\r\n                stroke:{\r\n                  width:0,\r\n                  color:\"tomato\"\r\n                }\r\n              },\r\n              size:{\r\n                value:8,\r\n                random:true,\r\n                anim:{\r\n                  enable:true,\r\n                  speed:5,\r\n                  size_min:0.1,\r\n                  sync:false\r\n                }\r\n              },\r\n              opacity:{\r\n                value:0.5,\r\n                random:true,\r\n                anim:{\r\n                  enable:true,\r\n                  speed:1,\r\n                  opacity_min:0.1\r\n               }\r\n              }\r\n            }\r\n          }}\r\n          \r\n            />\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Typography, box, Box } from \"@material-ui/core\"\r\nimport Navbar from \"./Navbar\"\r\n\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    mainContainer:{\r\n        background:\"#233\"\r\n    },\r\n    timeLine:{\r\n        position:\"relative\",\r\n        padding:\"1rem\",\r\n        margin:\"0 auto\",\r\n        \"&:before\":{\r\n            content:\"''\",\r\n            position:\"absolute\",\r\n            height:\"100%\",\r\n            border:\"1px solid tan\",\r\n            right:\"40px\",\r\n            top:0\r\n        },\r\n        \"&:after\":{\r\n            content:\"''\",\r\n            display:\"table\",\r\n            clear:\"both\"\r\n        },\r\n        [theme.breakpoints.up(\"md\")]:{\r\n            \"&:before\":{\r\n                left:\"calc(50% - 1px)\",\r\n               right:\"auto\" \r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst Resume = () => {\r\n    const classes=useStyles();\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Box component=\"header\" className={classes.mainContainer}>\r\n                <Typography variant=\"h4\" align=\"center\">\r\n                    Work Experience\r\n                </Typography>\r\n                <Box component=\"div\" className={classes.timeLine}>\r\n                    <Typography variant=\"h2\">2016</Typography>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport Home from './components/'\nimport Resume from \"./components/Resume\"\nfunction App() {\n  return (\n    <>\n   <CssBaseline/>\n   <Route exact path=\"/\" component={Home}></Route>\n   <Route path=\"/resume\" component={Resume}></Route>\n\n</>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <Router> <App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.7c8e5f50.png\";"],"sourceRoot":""}